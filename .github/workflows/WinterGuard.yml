name: Gen clash-wg conf

on:
  push:
    branches: ['main']
  schedule:
    - cron: '0 */12 * * *' # Execution every 12 hours
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04
    timeout-minutes: 15 # To prevent freezing

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12' # Using the stable version
          cache: pip
          architecture: x64

        # Creating a cache for increased speed, performance, efficiency, and saving resources
      - name: Cache Python packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip || exit 1
          pip install -r edge/requirements.txt || exit 1
       
        # Run ;‚Å†)
      - name: Run config generation script
        run: python winterguard.py

      - name: Commit and push config files
        run: |
          git config --local user.name "Github Actions"
          git config --local user.email "actions@github.com"
                    
          if git status --porcelain | grep -q "clash-meta-wg.yml" || git status --porcelain"; then
            echo "Changes detected. Committing and pushing."
            git add sub/clash-meta-wg.yml
            git commit -m "Auto: Update clash-wg configurations at: $(TZ='Asia/Tehran' date '+%H:%M:%S')" -m "Wireguard private key, addresses, reserved, and all IPs have been renewed"
             git -c committer.name="NiREvil" -c committer.email="126243832+NiREvil@users.noreply.github.com" \
            git push
          else
            echo "No changes detected in config files."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
